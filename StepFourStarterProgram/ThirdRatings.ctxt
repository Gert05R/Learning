#BlueJ class context
comment0.target=ThirdRatings
comment1.params=
comment1.target=ThirdRatings()
comment2.params=ratingsfile
comment2.target=ThirdRatings(java.lang.String)
comment3.params=
comment3.target=int\ getRaterSize()
comment3.text=public\ ArrayList\ <Rating>\ getAverageRatingsByFilter(int\ minimalRaters,\ Filter\ filterCriteria)\ {\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ ArrayList\ <Rating>\ getAverageRatings\ \=\ new\ ArrayList\ <Rating>();\n\ \ \ \ \ \ \ \ for\ (int\ k\ \=\ 0;\ k<myRaters.size();\ k++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ EfficientRater\ rt\ \=\ myRaters.get(k);\n\ \ \ \ \ \ \ \ \ \ \ \ //ArrayList\ <String>\ items\ \=\ rt.getItemsRated();\n\ \ \ \ \ \ \ \ \ \ \ \ ArrayList\ <String>\ movies\ \=\ MovieDatabase.filterBy(filterCriteria);\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\ \=0;\ i<movies.size();\ i++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ String\ movieID\ \=\ movies.get(i);\n\ \ \ \ \ \ \ \ \ \ \ \ //System.out.println("Test1\ "\ +\ movieID);\n\ \ \ \ \ \ \ \ \ \ \ \ Double\ average\ \=\ getAverageByID(movieID,\ minimalRaters);\n\ \ \ \ \ \ \ \ \ \ \ \ //System.out.println("Test2\ "\ +\ average);\n\ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ if\ (average\ \ >\ 0.0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Rating\ current\ \=\ new\ Rating\ (movieID,\ average);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ getAverageRatings.add(current);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ ArrayList\ <String>\ movieID\=\ MovieDatabase.filterBy(filterCriteria);\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ ArrayList\ <Rating>\ AverageRatings\ \=\ new\ ArrayList\ <Rating>();\n\ \ \ \ \ \ \ \ ArrayList\ <String>\ items\ \=\ new\ ArrayList\ <String>();\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ for\ (int\ i\=0;\ i<getAverageRatings.size();\ i++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Rating\ current\ \=\ getAverageRatings.get(i);\n\ \ \ \ \ \ \ \ \ \ \ \ String\ item\ \=\ current.getItem();\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ if\ (\!\ items.contains(item))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ AverageRatings.add(getAverageRatings.get(i));\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ items.add(item);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ return\ AverageRatings;\n\n}
comment4.params=id\ minimalRaters
comment4.target=double\ getAverageByID(java.lang.String,\ int)
comment5.params=minimalRaters
comment5.target=java.util.ArrayList\ getAverageRatings(int)
comment5.text=public\ ArrayList\ <Rating>\ getAverageRatings(int\ minimalRaters)\ {\n\ \ \ \ \n\ \ \ \ \ \ \ \ ArrayList\ <Rating>\ getAverageRatings\ \=\ new\ ArrayList\ <Rating>();\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ for\ (int\ k\ \=\ 0;\ k<myRaters.size();\ k++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ EfficientRater\ rt\ \=\ myRaters.get(k);\n\ \ \ \ \ \ \ \ \ \ \ \ //ArrayList\ <String>\ items\ \=\ rt.getItemsRated();\n\ \ \ \ \ \ \ \ \ \ \ \ ArrayList<String>\ movies\ \=\ MovieDatabase.filterBy(new\ TrueFilter());\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\ \=0;\ i<movies.size();\ i++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ String\ movieID\ \=\ movies.get(i);\n\ \ \ \ \ \ \ \ \ \ \ \ //System.out.println("Test1\ "\ +\ movieID);\n\ \ \ \ \ \ \ \ \ \ \ \ Double\ average\ \=\ getAverageByID(movieID,\ minimalRaters);\n\ \ \ \ \ \ \ \ \ \ \ \ //System.out.println("Test2\ "\ +\ average);\n\ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ if\ (average\ \ >\ 0.0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Rating\ current\ \=\ new\ Rating\ (movieID,\ average);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ getAverageRatings.add(current);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ ArrayList\ <Rating>\ AverageRatings\ \=\ new\ ArrayList\ <Rating>();\n\ \ \ \ \ \ \ \ ArrayList\ <String>\ items\ \=\ new\ ArrayList\ <String>();\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ for\ (int\ i\=0;\ i<getAverageRatings.size();\ i++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Rating\ current\ \=\ getAverageRatings.get(i);\n\ \ \ \ \ \ \ \ \ \ \ \ String\ item\ \=\ current.getItem();\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ if\ (\!\ items.contains(item))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ AverageRatings.add(getAverageRatings.get(i));\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ items.add(item);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ return\ AverageRatings;\n}
comment6.params=minimalRaters\ filterCriteria
comment6.target=java.util.ArrayList\ getAverageRatingsByFilter(int,\ Filter)
numComments=7
